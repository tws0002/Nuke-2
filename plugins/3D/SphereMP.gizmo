#! C:/Program Files/Nuke10.5v7/nuke-10.5.7.dll -nx
version 10.5 v7
Group {
inputs 2
name SphereMP_1
onCreate {
if '__SphereMP' not in locals():
    class __SphereMP(object):
        @classmethod
        def on_create(cls):
            nuke.thisNode()['custom_frame'].setEnabled(nuke.thisNode()['use_custom_frame'].value())

        @classmethod
        def on_destroy(cls):
            pass
        
        @classmethod
        def find_camera(cls, node=None):
            try:
                n = node or nuke.thisGroup().input(1)
                while n and n.Class() in ('Dot',):
                    n = n.input(0)
                if n and n.Class() in ('Camera', 'Camera2'):
                    return n
            except ValueError:
                pass
            return None

        @classmethod
        def camera_value(cls, knob_name, default=0, frame=None):
            camera = cls.find_camera()
            if frame is None:
                frame = nuke.frame
            if not camera:
                return default
            return camera[knob_name].getValueAt(float(frame))

        @classmethod
        def knob_changed(cls):
            if nuke.thisKnob() is nuke.thisNode()['use_custom_frame']:
                nuke.thisNode()['custom_frame'].setEnabled(nuke.thisKnob().value())

__SphereMP.on_create()
}
knobChanged __SphereMP.knob_changed()
tile_color 0x9c0000ff
gl_color 0x32fffe00
note_font 微软雅黑
addUserKnob {20 tab1 l "SphereMP v0.2.2"}
addUserKnob {6 use_custom_frame l 指定基准帧 -STARTLINE}
addUserKnob {3 custom_frame l "" -STARTLINE +DISABLED}
custom_frame 30
addUserKnob {3 frame l INVISIBLE +INVISIBLE}
frame {{"\[python -execlocal first,\\ last\\ =\\ nuke.numvalue('root.first_frame'),\\ nuke.numvalue('root.last_frame')\\nmiddle\\ =\\ (first\\ +\\ last)//2\\nthisNode\\ =\\ nuke.thisNode()\\nif\\ thisNode\\\['use_custom_frame'\\].value()\\ :\\n\\ \\ \\ \\ ret\\ =\\ thisNode\\\['custom_frame'\\].value()\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ middle]"}}
addUserKnob {32 bt_first l 首帧 -STARTLINE T "knob use_custom_frame 1\nknob custom_frame \[value root.first_frame] "}
addUserKnob {32 bt_middle l 中间帧(默认) -STARTLINE T "knob this.use_custom_frame 0"}
addUserKnob {32 bt_last l 末帧 -STARTLINE T "knob use_custom_frame 1\nknob custom_frame \[value root.last_frame] "}
addUserKnob {13 offset}
addUserKnob {41 rotate T Sphere1.rotate}
addUserKnob {7 distance l 屏幕距离 R 0 10000}
distance 100
}
Input {
inputs 0
name InputCamera
gl_color 0x32fff400
note_font 微软雅黑
xpos 70
ypos -126
number 1
}
Input {
inputs 0
name InputImage
gl_color 0x9732ff00
note_font 微软雅黑
xpos 0
ypos -292
}
Assert {
expression {{"\[python bool(__SphereMP.find_camera())]"}}
message 未连接摄像机
name Assert1
gl_color 0x32ff6000
note_font 微软雅黑
xpos 0
ypos -260
}
Sphere {
radius {{parent.knob.distance}}
translate {{"\[python \{__SphereMP.camera_value('translate', \[0, 0, 0], nuke.thisGroup()\['frame'].value())\[0]\}] + parent.knob.offset"} {"\[python \{__SphereMP.camera_value('translate', \[0, 0, 0], nuke.thisGroup()\['frame'].value())\[1]\}] + parent.knob.offset"} {"\[python \{__SphereMP.camera_value('translate', \[0, 0, 0], nuke.thisGroup()\['frame'].value())\[2]\}] + parent.knob.offset"}}
name Sphere1
gl_color 0xdf32ff00
xpos 0
ypos -228
}
Scene {
name Scene2
gl_color 0xff32a100
xpos 10
ypos -196
}
push 0
ScanlineRender {
inputs 3
conservative_shader_sampling false
motion_vectors_type distance
name ScanlineRender2
gl_color 0x32d1ff00
xpos 0
ypos -94
}
Expression {
channel0 depth
expr0 (z==0)?99999:1/z*0.0001
name Expression2
gl_color 0x32fffe00
label Depth:NukeToRedshift
xpos 0
ypos -62
}
Output {
name Output1
gl_color 0x32b8ff00
xpos 0
ypos -20
}
end_group
